name: Dependency Security Alerts

on:
  schedule:
    # Ejecutar diariamente a las 3 AM
    - cron: '0 3 * * *'
  workflow_dispatch:
  pull_request:
    paths:
      - 'backend/package*.json'
      - 'frontend/package*.json'
      - '.github/dependabot.yml'

jobs:
  dependency-alerts:
    name: 'Monitor Critical Dependencies'
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v4

    - name: 'Setup Node.js'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 'Check for critical dependency updates'
      run: |
        cd backend
        npm ci

        # Verificar si hay actualizaciones críticas disponibles
        echo "🔍 Checking for critical dependency updates..."

        # Obtener lista de dependencias desactualizadas
        OUTDATED=$(npm outdated --json 2>/dev/null || echo "{}")

        # Verificar dependencias críticas
        CRITICAL_DEPS=("express" "mongoose" "helmet" "jsonwebtoken" "bcrypt" "cors")

        ALERTS=""

        for dep in "${CRITICAL_DEPS[@]}"; do
          if echo "$OUTDATED" | jq -e ".\"$dep\"" > /dev/null 2>&1; then
            CURRENT=$(echo "$OUTDATED" | jq -r ".\"$dep\".current")
            LATEST=$(echo "$OUTDATED" | jq -r ".\"$dep\".latest")
            ALERTS="${ALERTS}🚨 **$dep**: $CURRENT → $LATEST\n"
          fi
        done

        if [ -n "$ALERTS" ]; then
          echo "## 🚨 Critical Dependency Updates Available" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "$ALERTS" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please review and update these dependencies as soon as possible." >> $GITHUB_STEP_SUMMARY
        else
          echo "## ✅ All Critical Dependencies Up to Date" >> $GITHUB_STEP_SUMMARY
        fi

    - name: 'Check for security vulnerabilities'
      run: |
        cd backend
        echo "🔒 Checking for security vulnerabilities..."

        # Ejecutar npm audit y capturar resultado
        AUDIT_RESULT=$(npm audit --audit-level high --json 2>/dev/null || echo '{"vulnerabilities": {}}')

        VULN_COUNT=$(echo "$AUDIT_RESULT" | jq '.metadata.vulnerabilities.total // 0')

        if [ "$VULN_COUNT" -gt 0 ]; then
          echo "## 🚨 Security Vulnerabilities Found" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Total vulnerabilities: **$VULN_COUNT**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Run \`npm audit fix\` to attempt automatic fixes." >> $GITHUB_STEP_SUMMARY
          echo "For manual review: \`npm audit\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "## ✅ No Security Vulnerabilities Found" >> $GITHUB_STEP_SUMMARY
        fi

    - name: 'Monitor dependency sizes'
      run: |
        cd backend
        echo "📦 Checking dependency bundle sizes..."

        # Instalar y ejecutar bundle analyzer si está disponible
        if command -v npx > /dev/null; then
          # Crear reporte de tamaños (simplificado)
          echo "## 📊 Dependency Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Contar dependencias
          DEP_COUNT=$(jq '.dependencies | length' package.json)
          DEV_DEP_COUNT=$(jq '.devDependencies | length' package.json)

          echo "Production dependencies: **$DEP_COUNT**" >> $GITHUB_STEP_SUMMARY
          echo "Development dependencies: **$DEV_DEP_COUNT**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Verificar dependencias grandes
          LARGE_DEPS=$(npm ls --depth=0 --json | jq -r '.dependencies | to_entries[] | select(.value.version | contains(".")) | .key' | head -5)
          if [ -n "$LARGE_DEPS" ]; then
            echo "### 📈 Largest Dependencies" >> $GITHUB_STEP_SUMMARY
            echo "$LARGE_DEPS" >> $GITHUB_STEP_SUMMARY
          fi
        fi

    - name: 'Send alerts to Slack'
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: '🚨 Critical dependency issues detected in Twenty One Pilots'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  dependency-docs:
    name: 'Update Dependency Documentation'
    runs-on: ubuntu-latest
    needs: dependency-alerts

    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v4

    - name: 'Setup Node.js'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 'Generate dependency report'
      run: |
        cd backend
        npm ci

        # Crear documentación de dependencias
        echo "# 📦 Backend Dependencies Report" > ../DEPENDENCY_REPORT.md
        echo "" >> ../DEPENDENCY_REPORT.md
        echo "Generated on: $(date)" >> ../DEPENDENCY_REPORT.md
        echo "" >> ../DEPENDENCY_REPORT.md

        echo "## 🔒 Security Status" >> ../DEPENDENCY_REPORT.md
        npm audit --audit-level high --json | jq -r '.metadata | "Total vulnerabilities: \(.vulnerabilities.total // 0)\nCritical: \(.vulnerabilities.critical // 0)\nHigh: \(.vulnerabilities.high // 0)\nModerate: \(.vulnerabilities.moderate // 0)\nLow: \(.vulnerabilities.low // 0)"' >> ../DEPENDENCY_REPORT.md 2>/dev/null || echo "Audit check failed" >> ../DEPENDENCY_REPORT.md
        echo "" >> ../DEPENDENCY_REPORT.md

        echo "## 📊 Package Statistics" >> ../DEPENDENCY_REPORT.md
        echo "- Production dependencies: $(jq '.dependencies | length' package.json)" >> ../DEPENDENCY_REPORT.md
        echo "- Development dependencies: $(jq '.devDependencies | length' package.json)" >> ../DEPENDENCY_REPORT.md
        echo "- Total packages: $(jq '.dependencies // {} | length' package.json)" >> ../DEPENDENCY_REPORT.md
        echo "" >> ../DEPENDENCY_REPORT.md

        echo "## 🔄 Outdated Dependencies" >> ../DEPENDENCY_REPORT.md
        echo "\`\`\`" >> ../DEPENDENCY_REPORT.md
        npm outdated 2>/dev/null || echo "All dependencies are up to date" >> ../DEPENDENCY_REPORT.md
        echo "\`\`\`" >> ../DEPENDENCY_REPORT.md

    - name: 'Commit dependency report'
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: '📊 Update dependency security report'
        file_pattern: 'DEPENDENCY_REPORT.md'
        commit_user_name: 'GitHub Actions'
        commit_user_email: 'actions@github.com'