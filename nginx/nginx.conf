# Twenty One Pilots - Production Nginx Configuration
# Implements reverse proxy with SSL, load balancing, and security headers

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format health_check '$remote_addr - [$time_local] "$request" $status';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

    # Upstream backends
    upstream twentyonepilots_backend {
        least_conn;
        server backend:5000 max_fails=3 fail_timeout=30s;
        server backend:5001 max_fails=3 fail_timeout=30s;
        server backend:5002 max_fails=3 fail_timeout=30s;
        server backend:5003 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream twentyonepilots_frontend {
        server frontend:3000;
    }

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # RBAC Configuration - Basic Auth for admin routes
    # Create htpasswd file: htpasswd -c /etc/nginx/.htpasswd admin
    # Add users: htpasswd /etc/nginx/.htpasswd deployer

    # Map for role-based access
    map $remote_user $user_role {
        default "guest";
        "admin" "admin";
        "deployer" "deployer";
        "moderator" "moderator";
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.youtube.com https://s.ytimg.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://www.youtube.com;" always;

    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name yourdomain.com;

        # SSL certificates (mount these volumes in docker-compose)
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # Root directory and index
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Health check endpoint (no logging)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Frontend - React SPA
        location / {
            limit_req zone=general burst=20 nodelay;

            # Proxy to frontend
            proxy_pass http://twentyonepilots_frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Frontend specific headers
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # API routes
        location /api/ {
            limit_req zone=api burst=10 nodelay;

            # Proxy to backend with load balancing
            proxy_pass http://twentyonepilots_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-User-Role $user_role;

            # API specific headers
            add_header Cache-Control "no-cache";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Admin routes - Require authentication and admin role
        location /api/admin/ {
            # Basic authentication for admin routes
            auth_basic "Twenty One Pilots Admin Access";
            auth_basic_user_file /etc/nginx/.htpasswd;

            # Only allow admin and deployer roles
            if ($user_role !~ "^(admin|deployer)$") {
                return 403 "Access denied: insufficient privileges";
            }

            limit_req zone=api burst=5 nodelay;

            # Proxy to backend
            proxy_pass http://twentyonepilots_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-User-Role $user_role;
            proxy_set_header X-Admin-User $remote_user;

            # Security headers for admin routes
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate";

            # Log admin access
            access_log /var/log/nginx/admin_access.log main;
        }

        # Deployment endpoints - Require deployer role
        location /api/deploy/ {
            # Basic authentication for deployment routes
            auth_basic "Twenty One Pilots Deployment Access";
            auth_basic_user_file /etc/nginx/.htpasswd;

            # Only allow deployer and admin roles
            if ($user_role !~ "^(admin|deployer)$") {
                return 403 "Access denied: deployment privileges required";
            }

            limit_req zone=api burst=2 nodelay;

            # Proxy to backend
            proxy_pass http://twentyonepilots_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-User-Role $user_role;
            proxy_set_header X-Deploy-User $remote_user;

            # Security headers
            add_header Cache-Control "no-cache";

            # Log deployment access
            access_log /var/log/nginx/deployment_access.log main;
        }

        # Static assets with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;

            # Try frontend first, then fallback to nginx default
            try_files /usr/share/nginx/html$uri @frontend;
        }

        location @frontend {
            proxy_pass http://twentyonepilots_frontend;
        }

        # Security: Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Monitoring server block (optional - for internal monitoring access)
    server {
        listen 8080;
        server_name monitoring.yourdomain.com;

        location / {
            # Proxy to monitoring stack
            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Prometheus metrics endpoint
        location /metrics {
            proxy_pass http://prometheus:9090;
        }

        # Alertmanager
        location /alerts {
            proxy_pass http://alertmanager:9093;
        }
    }
}